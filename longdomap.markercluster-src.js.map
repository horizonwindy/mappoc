{"version":3,"sources":["webpack://lmc/webpack/bootstrap","webpack://lmc/./src/Cluster.js","webpack://lmc/./src/ConfigHandler.js","webpack://lmc/./src/Icon.js","webpack://lmc/./src/LLBBox.js","webpack://lmc/./src/MarkerCluster.js","webpack://lmc/./src/index.js"],"names":["longdo","window","markerCluster","config","iloader","_markerCluster","_config","_map","_center","_markers","_bounds","_clusterIcon","ClusterIcon","marker","tile","location","_calculateBounds","averageCenter","Util","averageLocation","Projections","EPSG3857","isAdded","push","drawMarkerArea","drawArea","swarmModeEnabled","swarmAlg","_gridids","LLBBox","generateFrom","boundOfTile","getNxNGridCord","swarmGridSize","remove","length","removeArea","generateRect","extendSize","gridSize","Math","pow","zoom","isLocInBounds","setSums","setCenter","show","options","maxZoom","minClusterSize","textColor","customOuterClusterCSS","customInnerClusterCSS","customTextClusterCSS","clusterRadius","parseInt","styles","onClickCenter","swarmGridLength","swarmMarkersMaxLimit","swarmMarkersAmountAdjust","swarmMarkersMaxAmountPerTile","swarmMarkersConstPerGrid","cluster","_cluster","_iloader","_sums","_clusterMarker","Marker","getIcon","OverlayWeight","Top","len","pos","active","Overlays","add","mz","move","setLocation","targetmarker","index","element","_poly","Polygon","getRectVertex","amounts","Array","fill","sum","m","idx","u","v","_calculateMarkersDispAmount","amount","swarmAlg2Decider","modsig","n","inmax","outmax","z","result","round","exp","_maxDispAmount","_maxClusterSize","num","center","sums","changeNumber","IconLoader","markercluster","_images","Map","ready","useDefault","loadStyles","url","width","height","minThreshold","callback","img","Image","set","that","onload","get","values","every","elm","resetViewport","_createClusters","src","keys","sort","elm1","elm2","style","load","document","createElement","elm3","appendChild","marginLeft","marginTop","overflow","color","className","key","Object","hasOwnProperty","call","styleOuterClusterObj","styleInnerClusterObj","styleTextObj","html","outerHTML","size","background","encodeURI","lineHeight","fontWeight","textAlign","children","innerText","toLocaleString","list","locations","_projection","_locationList","slice","_originalLocationList","locationBound","minLon","minLat","maxLon","maxLat","b","filter","e","empty","loc","contains","diff","maxy","latToNorm","miny","normToLat","map","xlen","ylen","_lat2y","lonoffset","lon","yoffset","lat","xid","floor","yid","y","atan","PI","log","tan","bound","loc1","loc2","LLCircle","radius","sqrad","Error","MarkerCluster","_clusters","_prevZoom","_ready","overlay","Config","Event","bind","setTimeout","setSelectedMarker","distance","Number","POSITIVE_INFINITY","cl","cen","l","len2","d","isinCluster","isMarkerInClusterBoundsAtZoom","zoomTime","avgLoc","markers","shuffle","i","r","random","temp","_overlay","classList","mapBounds","bounds","_addToClosestCluster","_addToTiledCluster","finalize","clusterToAddTo","isMarkerInClusterBounds","addMarker","Cluster","locationToTile","point","locationToPoint","pointToTile","indexOf","splice","removed","_removeMarker","markersCopy"],"mappings":"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","file":"longdomap.markercluster-src.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {ClusterIcon} from './Icon';\nimport {LLBBox} from './LLBBox';\nconst longdo = window.longdo;\n/**\n * class for cluster\n * @export Cluster\n * @class Cluster\n */\nexport default class{\n    /**\n     * Creates an isntance of Cluster\n     * @param {MarkerCluster} markerCluster MarkerCluster instance\n     * @param {ConfigHandler} config config variables\n     * @param {IconLoader} iloader IconLoader instance\n     */\n    constructor(markerCluster,config,iloader){\n        this._markerCluster = markerCluster;\n        this._config = config;\n        this._map = markerCluster._map;\n        \n        this._center = null;\n        this._markers = [];\n        this._bounds = null;\n        this._clusterIcon = new ClusterIcon(this,this._config,iloader);\n    }\n\n    /**\n     * add marker to the cluster\n     * @param {longdo.Marker} marker marker to be added\n     * @param {longdo.Tile} [tile] tile including marker(optional), needed only in swarm mode 1.\n     * @returns {undefined}\n     */\n    addMarker(marker,tile){\n        if(!this._center){\n            this._center = marker.location();\n            this._calculateBounds();\n        }else{\n            if(this._config.averageCenter){\n                this._center = longdo.Util.averageLocation(longdo.Projections.EPSG3857,\n                    this._center,marker.location());\n                this._calculateBounds();\n            }\n        }\n        marker.isAdded = true;\n        this._markers.push(marker);\n\n        if(this._config.drawMarkerArea){\n            this._bounds.drawArea(this._map);\n        }\n        if(this._config.swarmModeEnabled && this._config.swarmAlg === 1){\n            if(!this._gridids){\n                this._gridids = [];\n            }\n            this._gridids.push(LLBBox.generateFrom(\n                longdo.Util.boundOfTile(longdo.Projections.EPSG3857,tile)\n            ).getNxNGridCord(marker.location(),this._config.swarmGridSize));\n        }\n        return true;\n    }\n    /**\n     * remove icon & itself\n     * @returns {undefined}\n     */\n    remove(){\n        this._clusterIcon.remove();\n        this._markers.length = 0;\n        delete this._markers;\n        this._bounds.removeArea(this._map);\n    }\n\n    /**\n     * calculate cluster bound\n     * @returns {undefined}\n     */\n    _calculateBounds(){\n        this._bounds = LLBBox.generateRect(this._center).extendSize(this._config.gridSize*Math.pow(2,-this._map.zoom()));     \n    }\n\n    /**\n     * returns whether marker is inside cluster bounds\n     * @param {longdo.Marker} marker marker to be checked\n     * @returns {boolean} If marker is inside cluster bound, returns true\n     */\n    isMarkerInClusterBounds(marker){\n        return this._bounds.isLocInBounds(marker.location());\n    }\n    isMarkerInClusterBoundsAtZoom(marker, zoom){\n        this._bounds = LLBBox.generateRect(this._center).extendSize(this._config.gridSize*Math.pow(2,-zoom));\n        return this._bounds.isLocInBounds(marker.location());\n    }\n    /**\n     * update icon's style and position and then show on map\n     * @returns {undefined}\n     */\n    finalize(){\n        this._clusterIcon.setSums(this._markers.length);\n        this._clusterIcon.setCenter(this._center);\n        this._clusterIcon.show();\n    }\n}","/**\n * class for carrying config/option values\n * @export ConfigHandler\n * @class ConfigHandler\n */\nexport default class {\n    constructor(options){\n        this.maxZoom = options.maxZoom || null;\n        this.minClusterSize = options.minClusterSize || 2;\n        this.textColor = options.textColor || 'black';\n        this.customOuterClusterCSS = options.customOuterClusterCSS || {};\n        this.customInnerClusterCSS = options.customInnerClusterCSS || {};\n        this.customTextClusterCSS = options.customTextClusterCSS || {};\n        this.gridSize = options.gridSize || 120;\n        this.clusterRadius = options.clusterRadius || this.gridSize;\n        this.averageCenter = options.averageCenter;\n        this.drawMarkerArea = options.drawMarkerArea;\n        this.swarmModeEnabled = options.swarmModeEnabled;\n        this.swarmAlg = options.swarmAlg ? parseInt(options.swarmAlg,10) : null;\n        this.styles = options.styles || null;\n        this.onClickCenter = options.onClickCenter || false;\n        this.swarmGridLength = options.swarmGridLength ? parseInt(options.swarmGridLength,10) : null;\n        this.swarmMarkersMaxLimit = options.swarmMarkersMaxLimit ? parseInt(options.swarmMarkersMaxLimit,10) : null;\n        this.swarmMarkersAmountAdjust = options.swarmMarkersAmountAdjust;\n        this.swarmMarkersMaxAmountPerTile = options.swarmMarkersMaxAmountPerTile ? parseInt(options.swarmMarkersMaxAmountPerTile,10) : null;\n        this.swarmMarkersConstPerGrid = options.swarmMarkersConstPerGrid ? parseInt(options.swarmMarkersConstPerGrid,10) : null;\n    }\n}","/** @module Icon */\nconst longdo = window.longdo;\n/**\n * Class for managing cluster's icon & children markers' icons\n * @export ClusterIcon\n * @class ClusterIcon\n */\nexport class ClusterIcon{\n    /**\n     *Creates an instance of ClusterIcon.\n     * @param {Cluster} cluster cluster in charge of this\n     * @param {ConfigHandler} config config variables\n     * @param {IconLoader} iloader cluster icon carrier\n     * @memberof ClusterIcon\n     */\n    constructor(cluster,config,iloader){\n        this._cluster = cluster;\n        this._config = config;\n        this._iloader = iloader;\n        this._center = null;\n        this._map = cluster._map;\n        this._sums = null;\n        this._clusterMarker = new longdo.Marker({\"lat\":0,\"lon\":0},{\n            \"icon\": this._cluster._markerCluster._iloader.getIcon(0),\n            \"weight\": longdo.OverlayWeight.Top\n        });\n    }\n\n    /**\n     * show cluster icons & marker icons if needed\n     * @returns {undefined}\n     * @memberof ClusterIcon\n     */\n    show(){\n        let len = this._cluster._markers.length;\n        if(!this._config.swarmModeEnabled){\n            const pos = this._center;\n            if (this._cluster._markers.length < this._config.minClusterSize){\n                const marker = this._cluster._markers[0];\n                if(!marker.active()){\n                    this._map.Overlays.add(marker);\n                }\n                return;\n            }\n            const zoom = this._map.zoom();\n            const mz = this._config.maxZoom;\n            if(mz && zoom > mz || zoom === 20){\n                while(len--){\n                    const marker = this._cluster._markers[len];\n                    if(!marker.active()){\n                        this._cluster._map.Overlays.add(marker);\n                    }\n                }\n                return;\n            }\n            if(this._clusterMarker.active()){\n                this._map.Overlays.move(this._clusterMarker,pos);\n            }else{\n                this._clusterMarker.setLocation(pos);\n                this._map.Overlays.add(this._clusterMarker);\n                const targetmarker = this._cluster._markers;\n                for (let index = 0; index < targetmarker.length; index++) {\n                    const element = targetmarker[index];\n                    this._map.Overlays.remove(element)\n                }\n                if(this._poly){\n                    this._map.Overlays.remove(this._poly);\n                }\n                if(this._config.drawMarkerArea){\n                    this._poly = new longdo.Polygon(this._cluster._bounds.getRectVertex(),{\"fillColor\": \"rgba(0,0,0,0.3)\"});\n                    this._map.Overlays.add(this._poly);\n                }\n            }\n        }else if(this._config.swarmAlg === 1){\n            //TODO\n            const amounts = new Array(this._config.swarmGridLength*this._config.swarmGridLength).fill(0);\n            let sum = 0;\n            while(len--){\n                if(sum >= this._config.swarmMarkersMaxAmountPerTile){\n                    break;\n                }\n                const m = this._cluster._markers[len];\n                const tile = this._cluster._gridids[len];\n                const idx = tile.u * this._config.swarmGridLength + tile.v;\n                if(amounts[idx] % this._config.swarmMarkersConstPerGrid === 0){\n                    if(!m.active()){\n                        this._map.Overlays.add(m);\n                    }\n                    sum++;\n                }\n                amounts[idx]++;\n            }\n        }else if(this._config.swarmAlg === 2){\n            this._calculateMarkersDispAmount();\n            let amount = 0;\n            while(len--){\n                if(amount > this._config.swarmMarkersMaxLimit){\n                    break;\n                }\n                const m = this._cluster._markers[len];\n                if(this.swarmAlg2Decider(amount,this._cluster._markers.length-len-1)){\n                    if(!m.active()){\n                        this._map.Overlays.add(m);\n                    }\n                    amount++;\n                }\n            }\n            return;\n        }\n    }\n    _calculateMarkersDispAmount(){\n        const modsig = function(n,inmax,outmax){\n            if(n === 0){\n                return 0;\n            }\n            const z = n / inmax * 49 - 13;\n            const result = Math.round(outmax*(1 / (1 + Math.exp(-z))));\n            return result === 0 ? 1 : result;\n        };\n        this._maxDispAmount = modsig(this._cluster._markers.length,this._cluster._markerCluster._maxClusterSize,this._config.swarmMarkersMaxLimit);\n    }\n    swarmAlg2Decider(amount,num){\n        if(this._config.swarmMarkersAmountAdjust){\n            return this._maxDispAmount > amount;\n        }\n        return amount <= 5 || num % 10 === 0;\n    }\n    /**\n     * remove cluster icon from the map\n     * @memberof ClusterIcon\n     * @returns {undefined}\n     */\n    remove(){\n        this._map.Overlays.remove(this._clusterMarker);\n        if(this._poly){\n            this._map.Overlays.remove(this._poly);\n            this._poly = null;\n        }\n    }\n    /**\n     * set position where cluster icon will be rendered\n     * @param {longdo.Location} center position for cluster icon to be rendered\n     * @memberof ClusterIcon\n     * @returns {undefined}\n     */\n    setCenter(center){\n        this._center = center;\n    }\n    /**\n     * set number displaying in cluster\n     * @param {number} sums numbers to change to\n     * @returns {undefined}\n     * @memberof ClusterIcon\n     */\n    setSums(sums){\n        if(this._sums && sums === this._sums){return;}\n        this._sums = sums;\n        if(this._clusterMarker && this._clusterMarker.element()){\n            this._iloader.changeNumber(this._clusterMarker.element(),this._sums);\n        }\n    }\n}\n\n/**\n * class for loading cluser icons & carrying them\n * @export IconLoader\n * @class IconLoader\n */\nexport class IconLoader{\n\n    /**\n     *Creates an instance of IconLoader.\n     * @param {MarkerCluster} markercluster MarkerCluster instance\n     * @param {ConfigHandler} config config variables\n     * @memberof IconLoader\n     */\n    constructor(markercluster,config){\n        this._markerCluster = markercluster;\n        this._config = config;\n        this._images = new Map();\n        this.ready = true;\n        this.useDefault = true;\n        if(this._config.styles){\n            this.loadStyles(this._config.styles);\n        }\n    }\n    /**\n     * load style of icons\n     * @param {string} url url of icon image\n     * @param {number} width width of the image\n     * @param {number} height height of the image\n     * @param {number} minThreshold minimum threshold of size of cluster\n     * @param {Function} [callback] callback function to be called on finishing loading\n     * @returns {number} index of loaded style\n     * @memberof IconLoader\n     */\n    load(url,width,height,minThreshold,callback){\n        this.ready = false;\n        this.useDefault = false;\n        const img = new Image(width,height);\n        this._images.set(img,{\"ready\":false,\"minThreshold\":minThreshold});\n        const that = this;\n        img.onload = function(){\n            that._images.get(img).ready = true;\n            if([...that._images.values()].every(elm => elm.ready)){\n                that.ready = true;\n                that._markerCluster.resetViewport();\n                that._markerCluster._createClusters();\n            }\n            if(callback){\n                callback();\n            }\n        };\n        img.src = url;\n        return this._images.keys.length - 1;\n    }\n    /**\n     * load styles config value\n     * @param {Array<Object>} styles styles to be loaded\n     * @memberof IconLoader\n     * @returns {undefined}\n     */\n    loadStyles(styles){\n        styles.sort((elm1,elm2) => \n        elm1.minThreshold < elm2.minThreshold ? 1 : elm1.minThreshold === elm2.minThreshold ?\n         0 : -1); \n         let len = styles.length;\n         const that = this;\n         while(len--){\n             const style = styles[len];\n             this.load(style.url,style.width,style.height,style.minThreshold,len === 0 ? ()=>(that.ready = true) : null);\n         }\n    }\n    /**\n     * returns icon config object according to longdo Marker icon syntax\n     * @param {number} index index number to get icon style\n     * @returns {Object} icon config values object \n     * @memberof IconLoader\n     */\n    getIcon(index){\n        const result = {\"offset\": { \"x\": 0, \"y\": 0}};\n        if(this.useDefault || typeof index === 'undefined'){\n            const elm = document.createElement(\"div\");\n            const elm2 = document.createElement('div');\n            const elm3 = document.createElement('span');\n            elm.appendChild(elm2);\n            elm2.appendChild(elm3);\n            elm.style.width = '44px';\n            elm.style.height = '44px';\n            elm.style.marginLeft = '-22px';\n            elm.style.marginTop = '-22px';\n            elm.style.overflow = 'hidden';\n            elm.style.color = `${this._config.textColor}`\n            elm.className = 'marker-cluster marker-cluster-small leaflet-marker-icon';\n            if (this._config.customOuterClusterCSS) {\n                for (const key in this._config.customOuterClusterCSS) {\n                    if (Object.hasOwnProperty.call(this._config.customOuterClusterCSS, key)) {\n                        const styleOuterClusterObj = this._config.customOuterClusterCSS[key];\n                        elm.style[key] = styleOuterClusterObj\n                    }\n                }\n            }\n            if (this._config.customInnerClusterCSS) {\n                for (const key in this._config.customInnerClusterCSS) {\n                    if (Object.hasOwnProperty.call(this._config.customInnerClusterCSS, key)) {\n                        const styleInnerClusterObj = this._config.customInnerClusterCSS[key];\n                        elm2.style[key] = styleInnerClusterObj\n                    }\n                }\n            }\n            if (this._config.customTextClusterCSS) {\n                for (const key in this._config.customTextClusterCSS) {\n                    if (Object.hasOwnProperty.call(this._config.customTextClusterCSS, key)) {\n                        const styleTextObj = this._config.customTextClusterCSS[key];\n                        elm3.style[key] = styleTextObj\n                    }\n                }\n            }\n            result.html = elm.outerHTML;\n            result.size = {\"width\":44,\"height\":44};\n        }else{\n            const img = [...this._images.keys()][index];\n            const elm = document.createElement(\"div\");\n            elm.style.width = `${img.width}px`;\n            elm.style.height = `${img.height}px`;\n            elm.style.marginLeft = `-${img.width/2}px`;\n            elm.style.marginTop = `-${img.height/2}px`;\n            elm.style.background = `url('${encodeURI(img.src)}') no-repeat center top`;\n            elm.style.lineHeight = elm.style.height;\n            elm.style.color = `${this._config.textColor}`;\n            elm.style.fontWeight = 'bold';\n            elm.style.textAlign = 'center';\n            if (this._config.customTextClusterCSS) {\n                for (const key in this._config.customTextClusterCSS) {\n                    if (Object.hasOwnProperty.call(this._config.customTextClusterCSS, key)) {\n                        const styleTextObj = this._config.customTextClusterCSS[key];\n                        elm.style[key] = styleTextObj\n                    }\n                }\n            }\n            result.html = elm.outerHTML;\n            result.size = {\"width\":img.width,\"height\":img.height};\n        }\n        return result;\n    }\n    /**\n     * change displaying number in cluster\n     * @param {HTMLElement} element element of cluster needing to be made changes\n     * @param {number} num number to change to \n     * @memberof IconLoader\n     * @returns {undefined}\n     */\n    changeNumber(element,num){\n        if(this.useDefault){\n            element.children[0].children[0].children[0].innerText = `${num.toLocaleString()}`;\n            if(num < 10){\n                element.children[0].className = 'marker-cluster marker-cluster-small';\n            }else if(num < 100){\n                element.children[0].className = 'marker-cluster marker-cluster-medium';\n            }else{\n                element.children[0].className = 'marker-cluster marker-cluster-large';\n            }\n        }else{\n            element.children[0].innerText = `${num.toLocaleString()}`;\n            const list = [...this._images.keys()];\n            let len = list.length;\n            while(len--){\n                const img = list[len];\n                if(num >= this._images.get(img).minThreshold){\n                    let elm = element;\n                    elm.style.width = `${img.width}px`;\n                    elm.style.height = `${img.height}px`;\n                    elm = elm.children[0];\n                    elm.style.background = `url('${encodeURI(img.src)}') no-repeat center top`;\n                    elm.style.width = `${img.width}px`;\n                    elm.style.height = `${img.height}px`;\n                    elm.style.lineHeight = elm.style.height;\n                    break;\n                }\n            }\n        }\n    }\n}\n","const longdo = window.longdo;\n/**\n * class for carrying bound information\n * @export LLBBox\n * @class LLBBox\n */\nexport class LLBBox{\n    /**\n     *Creates an instance of LLBBox.\n     * @param {Array<longdo.Location>} locations array of locations to create bound\n     * @memberof LLBBox\n     */\n    constructor(locations){\n        this._projection = longdo.Projections.EPSG3857;\n        this._locationList = locations.slice();\n        this._originalLocationList = this._locationList.slice();\n        if(locations.length > 0){\n            this._bounds = longdo.Util.locationBound(this._locationList);\n        }\n    }\n\n    /**\n     * generate the instance set up bound\n     * @static\n     * @param {longdo.Bound} bound bound to be set up\n     * @returns {LLBBox} instance of this class\n     * @memberof LLBBox\n     */\n    static generateFrom(bound){\n        return new LLBBox(\n            [\n                {\"lon\":bound.minLon,\"lat\":bound.minLat},\n                {'lon':bound.maxLon,'lat':bound.maxLat}]);\n    }\n    /**\n     * generate the instance set up rect bound from 1 or 2 vertex\n     * @static\n     * @param {longdo.Location} loc1 1st vertex\n     * @param {longdo.Location} [loc2] 2nd vertex, if not provided, it will be as the same as loc1\n     * @returns {LLBBox} instance of this class\n     * @memberof LLBBox\n     */\n    static generateRect(loc1,loc2){\n        if(!loc2){\n            loc2 = loc1;\n        }\n        return new LLBBox([loc1,loc2]);\n    }\n\n    /**\n     * returns bound\n     * @returns {longdo.Bound} bound\n     * @memberof LLBBox\n     */\n    getBounds(){\n        return {'minLon':this._bounds.minLon,\n                'minLat':this._bounds.minLat,\n                'maxLon':this._bounds.maxLon,\n                'maxLat':this._bounds.maxLat};\n    }\n    /**\n     * returns Left-Top of the bound\n     * @returns {longdo.Location} left-top vertex of the bound\n     * @memberof LLBBox\n     */\n    LT(){\n        return {\"lon\": this._bounds.minLon, \"lat\": this._bounds.maxLat};\n    }\n    /**\n     * returns Right-Top of the bound\n     * @returns {londgo.Location} right-top vertex of the bound\n     * @memberof LLBBox\n     */\n    RT(){\n        return {\"lon\": this._bounds.maxLon, \"lat\": this._bounds.maxLat}; \n    }\n    /**\n     * returns Left-Bottom of the bound\n     * @returns {longdo.Location} left-bottom vertex of the bound\n     * @memberof LLBBox\n     */\n    LB(){\n        return {\"lon\": this._bounds.minLon, \"lat\": this._bounds.minLat};\n    }\n    /**\n     * returns right-bottom of the bound\n     * @returns {longdo.Locaton} right-bottom vertex of the bound\n     * @memberof LLBBox\n     */\n    RB(){\n        return {\"lon\": this._bounds.maxLon, \"lat\": this._bounds.minLat};\n    }\n    getMinimumBounds(){\n        const b = longdo.Util.locationBound(this._originalLocationList);\n        return b;\n    }\n\n    /**\n     * add location to bound and extend bound in order to include added location\n     * @param {longdo.Location} location location to be added\n     * @memberof LLBBox\n     * @returns {undefined}\n     */\n    add(location){\n        this._locationList.push(location);\n        this._originalLocationList.push(location);\n        this._bounds = longdo.Util.locationBound(this._locationList);\n    }\n    /**\n     * remove location from the bound\n     * @param {longdo.Location} location location to be removed\n     * @memberof LLBBox\n     * @returns {undefined}\n     */\n    remove(location){\n        this._locationList = this._locationList.filter((e) => e !== location);\n        this._originalLocationList = this._originalLocationList.filter((e) => e !== location);\n        this._bounds = this.empty() ? null: longdo.Util.locationBound(this._locationList);\n    }\n\n    /**\n     * return whether including no locations or not\n     * @returns {boolean} return true if containing no location\n     * @memberof LLBBox\n     */\n    empty(){return this._locationList.length === 0;}\n\n    /**\n     * returns array of locations included itself\n     * @returns {Array<longdo.Location>} array of locations included in itself\n     * @memberof LLBBox\n     */\n    getLocations(){\n        return this._locationList.slice();\n    }\n    /**\n     * returns whether given location is within its bound\n     * @param {longdo.Location} loc location to be checked\n     * @returns {boolaen} returns true if location is in bound\n     * @memberof LLBBox\n     */\n    isLocInBounds(loc){\n        const result = longdo.Util.contains(loc,this.getRectVertex());\n        return result === null ? true : result;\n    }\n    // isLocInBoundsInZoom(loc, zoom){\n    //     console.log(zoom);\n    //     console.log(this.getRectVertex());\n    //     const result = longdo.Util.contains(loc, this.getRectVertex());\n    //     return result === null ? true : result;\n    // }\n    /**\n     * extend bound size\n     * @param {number} diff size to extends\n     * @returns {LLBBox} itself\n     * @memberof LLBBox\n     */\n    extendSize(diff){\n        const b = this._bounds;\n        const maxy = this._projection.latToNorm(b.maxLat) + diff;\n        const miny = this._projection.latToNorm(b.minLat) - diff;\n        this._locationList.push({\"lon\":b.minLon - diff,\"lat\": this._projection.normToLat(miny)});\n        this._locationList.push({\"lon\":b.minLon - diff,\"lat\": this._projection.normToLat(maxy)});\n        this._locationList.push({\"lon\":b.minLon + diff,\"lat\": this._projection.normToLat(miny)});\n        this._locationList.push({\"lon\":b.maxLon + diff,\"lat\": this._projection.normToLat(maxy)});\n        this._bounds = longdo.Util.locationBound(this._locationList);\n        return this;\n    }\n    /**\n     * returns array of vertex by order of drawing rect\n     * @returns {Array<longdo.Location>} array of vertex locations\n     * @memberof LLBBox\n     */\n    getRectVertex(){\n        return [{\"lon\":this._bounds.minLon,\"lat\":this._bounds.minLat},\n        {\"lon\":this._bounds.minLon,\"lat\":this._bounds.maxLat},\n        {\"lon\":this._bounds.maxLon,\"lat\":this._bounds.maxLat},\n        {\"lon\":this._bounds.maxLon,\"lat\":this._bounds.minLat}];\n    }\n\n    /**\n     * draw polygon to show bound\n     * @param {longdo.Map} map map for polygon to show\n     * @memberof LLBBox\n     * @returns {undefined}\n     */\n    drawArea(map){\n        this._poly = new longdo.Polygon(this.getRectVertex());\n        map.Overlays.add(this._poly);\n    }\n    /**\n     * remove polygon from map\n     * @param {longdo.Map} map map where the polygon will be removed\n     * @memberof LLBBox\n     * @returns {undefined}\n     */\n    removeArea(map){\n        if(this._poly && this._poly.active()){\n            map.Overlays.remove(this._poly);\n            delete this._poly;\n        }\n    }\n\n    /**\n     * returns relative coordinates in given N x N grid\n     * @param {longdo.Location} loc location to be checked\n     * @param {number} n size of width,height of the grid\n     * @returns {longdo.Tile} coordinates(Tile)\n     * @memberof LLBBox\n     */\n    getNxNGridCord(loc,n){\n        if(!this.isLocInBounds(loc)){\n            return null;\n        }\n        const xlen = (this._bounds.maxLon - this._bounds.minLon) / n;\n        const ylen = (this._lat2y(this._bounds.maxLat) - this._lat2y(this._bounds.minLat)) / n;\n        let lonoffset = loc.lon - this._bounds.minLon;\n        const yoffset = -this._lat2y(loc.lat) + this._lat2y(this._bounds.maxLat);\n        const xid = Math.floor(lonoffset / xlen), yid = Math.floor(yoffset / ylen);\n        return {\"u\": xid,\"v\": yid};\n    }\n\n    /*\n    Adapted from https://wiki.openstreetmap.org/wiki/Mercator\n    */\n    /**\n     * convert y pixel coordinate into latitude\n     * @param {number} y pixel coordinate\n     * @returns {number} latitude\n     * @memberof LLBBox\n     */\n    _y2lat(y) { return (Math.atan(Math.exp(y / (180 / Math.PI))) / (Math.PI / 4) - 1) * 90; }\n    /**\n     * convert latitude into y pixel coordinate\n     * @param {number} lat latitude\n     * @returns {number} y pixel coordinate\n     * @memberof LLBBox\n     */\n    _lat2y(lat) { return Math.log(Math.tan((lat / 90 + 1) * (Math.PI / 4) )) * (180 / Math.PI); }\n}\n\nexport class LLCircle{\n    constructor(center,radius){\n        this.center = center;\n        this.sqrad = radius * radius;\n    }\n}","/** @module MarkerCluster*/\nif(typeof window.longdo === 'undefined'){\n    throw new Error('longdo API must be loaded before the longdomap markercluster plugin');\n}\nconst longdo = window.longdo;\nimport {LLBBox} from \"./LLBBox\";\nimport Config from \"./ConfigHandler\";\nimport {IconLoader} from './Icon';\nimport Cluster from './Cluster';\n/**\n * Class for MarkerCluster\n *\n * @export MarkerCluser\n * @class MarkerCluster\n */\nexport default class MarkerCluster{\n\n    /**\n     *Creates an instance of MarkerCluster.\n     * @param {longdo.Map} map Longdo Map instance\n     * @param {Object} options Options for MarkerCluster\n     * @memberof MarkerCluster\n     */\n    constructor(map, options){\n        this._map = map;\n        this._markers = [];\n        this._clusters = [];\n        this._prevZoom = 2;\n        this._ready = false;\n        this.overlay = [];\n        this.config = new Config(options);\n        this._iloader = new IconLoader(this,this.config);\n        this._projection = longdo.Projections.EPSG3857;\n        \n        const that = this;\n        this._map.Event.bind('zoom', function (/*pivot*/){\n            if(!that._ready || !that._iloader.ready){return;}\n            setTimeout(() => {\n                that.resetViewport();\n                that._createClusters();\n            }, 100);\n        });\n        this._map.Event.bind('drop',function() {\n            if(!that._ready || !that._iloader.ready){return;}\n            that.resetViewport();\n            that._createClusters();\n        });\n        this._map.Event.bind('overlayClick', function(overlay){\n            that.setSelectedMarker(overlay)\n            if(!that._ready || !that._iloader.ready){return;}\n            let len = that._clusters.length;\n            let distance = Number.POSITIVE_INFINITY;\n            while(len--){\n                const cl = that._clusters[len];\n                const cen = cl._center;\n                if(overlay === cl._clusterIcon._clusterMarker && cen){\n                    const l = [];\n                    let len2 = cl._markers.length;\n                    while(len2--){\n                        const marker = cl._markers[len2]\n                        l.push(marker.location());\n                        const d = longdo.Util.distance([cen,marker.location()]);\n                        if(d < distance){\n                            distance = d;\n                            const zoom = that._map.zoom()\n                            for (let index = zoom; index <= 20; index++) {\n                                const isinCluster = cl.isMarkerInClusterBoundsAtZoom(marker, index);\n                                if (!isinCluster) {\n                                    that._map.zoom(index);\n                                    if(that.config.onClickCenter) {\n                                        that._map.location(overlay.location(), false)\n                                    } else {\n                                        let zoomTime = index - zoom - 1\n                                        let avgLoc = longdo.Util.averageLocation(that._projection ,that._map.location(), overlay.location())\n                                        while (zoomTime--) {\n                                            avgLoc = longdo.Util.averageLocation(that._projection ,avgLoc, overlay.location())\n                                        }\n                                        that._map.location(avgLoc, false)\n                                    }\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    // that._map.bound(longdo.Util.locationBound(l));\n                    // setTimeout(function(){\n                    //     that.resetViewport();\n                    //     that._createClusters();\n                    // },10);\n                    return;\n                }\n            }\n        });\n        // this._map.Event.bind('loadTile', function(s){\n        //     if(s === 'start' || !that._ready || !that._iloader.ready){return;}\n        //     console.log('load tile')\n        //     that.resetViewport();\n        //     that._createClusters();\n        // });\n    }\n\n    /**\n     * add marker(s) to plugins's management\n     * @param {longdo.Marker| Array<longdo.Marker>} markers marker(s) to add\n     * @memberof MarkerCluster\n     * @returns {undefined}\n     */\n    addMarkers(markers){\n        if(markers instanceof longdo.Marker){\n            markers = [markers];\n        }\n        let len = markers.length;\n        while(len--){\n            const m = markers[len];\n            this._markers.push(m);\n        }\n        if(this.config.swarmModeEnabled){\n            this.shuffle();\n        }\n    }\n    /**\n     * randomize elements order in {@link MarkerCluster._markers}\n     * using Fisher-Yates Algorithm\n     * @memberof MarkerCluster\n     * @returns {undefined}\n     */\n    shuffle(){\n        for(let i = this._markers.length-1;i > 0; i--){\n            const r = Math.floor(Math.random()*(i+1));\n            const temp = this._markers[i];\n            this._markers[i] = this._markers[r];\n            this._markers[r] = temp;\n        }\n    }\n    getSelectedMarker() {\n        if(this.overlay) {\n            return this.overlay;\n        }\n        return null\n    }\n    setSelectedMarker(_overlay) {\n        if(_overlay && _overlay.element() && _overlay.element().classList.contains('ldmap_clickable')) {\n            this.overlay = _overlay\n        }\n    }\n\n    /**\n     * start rendering if icons-loading finished\n     * @memberof MarkerCluster\n     * @returns {undefined}\n     */\n    render(){\n        this._ready = true;\n        if(this._iloader.ready){\n\n            // this._map.Event.bind('ready',() => {\n            //     if(!this._ready || !this._iloader.ready){return;}\n            //     this._prevZoom = this._map.zoom;\n            //     console.log('map ready')\n            //     this.resetViewport();\n            //     this._createClusters();\n            // });\n            this.resetViewport();\n            this._createClusters();\n\n        }\n    }\n    /**\n     * choose markers in Map bound & add to clusters\n     * @memberof MarkerCluster\n     * @returns {undefined}\n     */\n    _createClusters(){\n        const mapBounds = LLBBox.generateFrom(this._map.bound());\n        const bounds = mapBounds.extendSize(this.config.gridSize*Math.pow(2,-this._map.zoom()));\n        let len = this._markers.length;\n        while(len--){\n            const m = this._markers[len];\n            const loc = m.location();\n            if(!m.isAdded && bounds.isLocInBounds(loc)){\n                if(!this.config.swarmModeEnabled){\n                    this._addToClosestCluster(m);\n                }else{\n                    if(this.config.swarmAlg === 2){\n                        this._addToClosestCluster(m);\n                    }else{\n                        this._addToTiledCluster(m);\n                    }\n                }\n            }\n        }\n                \n        len = this._clusters.length;\n        while(len--){\n            const cl = this._clusters[len];\n            cl.finalize();\n        }\n    }\n    /**\n     * add marker to the closest cluster if it is within cluster's grid. If not, create new one.\n     * @param {longdo.Marker} marker marker to be added\n     * @memberof MarkerCluster\n     * @returns {undefined}\n     */\n    _addToClosestCluster(marker){\n        let distance = Number.POSITIVE_INFINITY;\n        let clusterToAddTo = null;\n        let len = this._clusters.length;\n        while(len--){\n            const cluster = this._clusters[len];\n            const cen = cluster._center;\n            if(cen){\n                const d = longdo.Util.distance([cen,marker.location()]);\n                if(d < distance){\n                    distance = d;\n                    clusterToAddTo = cluster;\n                }\n            }\n        }\n        if(clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)){\n            clusterToAddTo.addMarker(marker);\n            if(this._maxClusterSize && this._maxClusterSize < clusterToAddTo._markers.length){\n                this._maxClusterSize = clusterToAddTo._markers.length;\n            }else{\n                this._maxClusterSize = clusterToAddTo._markers.length;\n            }\n        }else{\n            const cluster = new Cluster(this,this.config,this._iloader);\n            cluster.addMarker(marker);\n            this._clusters.push(cluster);\n            if(this._maxClusterSize && this._maxClusterSize < cluster._markers.length){\n                this._maxClusterSize = cluster._markers.length;\n            }else{\n                this._maxClusterSize = cluster._markers.length;\n            }\n        }\n    }\n\n    /**\n     * add marker to clusters in charge of its tile\n     * @param {longdo.Marker} marker marker to be added\n     * @returns {undefined}\n     * @memberof MarkerCluster\n     */\n    _addToTiledCluster(marker){\n        const that = this;\n        const locationToTile = function(loc){\n            const point = longdo.Util.locationToPoint(longdo.Projections.EPSG3857,loc);\n            point.z = 20-that._map.zoom();\n            return longdo.Util.pointToTile(point);\n        };\n        const tile = locationToTile(marker.location());\n        let len = this._clusters.length;\n        while(len--){\n            const cluster = this._clusters[len];\n            if(cluster.u === tile.u && cluster.v === tile.v){\n                cluster.addMarker(marker,tile);\n                return;\n            }\n        }\n        const cluster = new Cluster(this,this.config,this._iloader);\n        cluster.u = tile.u;\n        cluster.v = tile.v;\n        cluster.addMarker(marker,tile);\n        this._clusters.push(cluster);\n    }\n\n    _removeMarker(marker){\n        const index = this._markers.indexOf(marker);\n        if(index === -1){\n            return false;\n        }\n        this._map.Overlays.remove(marker);\n        this._markers.splice(index,1);\n        return true;\n    }\n\n    removeMarker(marker){\n        const removed = this._removeMarker(marker);\n        if(removed){\n            this.resetViewport();\n            this._createClusters();\n            return true;\n        }\n        return false;\n    }\n\n    removeMarkers(markers){\n        const markersCopy = markers === this._markers ? this._markers.slice() : markers;\n        let removed = false;\n        let len = markersCopy.length;\n        while(len--){\n            const r = this._removeMarker(markersCopy[len]);\n            removed = removed || r;\n        }\n        if(removed){\n            this.resetViewport();\n            this._createClusters();\n            return true;\n        }\n        return false;\n    }\n\n    clearMarkers(){\n        this.resetViewport();\n        let len = this._markers.length;\n        while(len--){\n            const marker = this._markers[len];\n            this._map.Overlays.remove(marker);\n        }\n        this._markers = [];\n    }\n\n    /**\n     * remove clusters & markers from the map, then clear clusters\n     * @memberof MarkerCluster\n     * @returns {undefined}\n     */\n    resetViewport(){\n        let len = this._clusters.length;\n        while(len--){\n            this._clusters[len].remove();\n        }\n        len = this._markers.length;\n        while(len--){\n            const marker = this._markers[len];\n            marker.isAdded = false;\n            //this._map.Overlays.remove(marker);\n        }\n        this._clusters = [];\n    }\n}\n","export {default as MarkerCluster} from './MarkerCluster';\n"],"sourceRoot":""}